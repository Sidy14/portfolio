{"version":3,"sources":["data/index.js","About.js","Contact.js","Navbar.js","Skills.js","Work.js","Follow.js","intersection-observer.js","App.js","index.js"],"names":["module","exports","projects","title","details","skills","level","About","className","id","alt","src","Contact","useState","fields","name","email","message","errors","state","setstate","getValue","event","target","value","handleFocus","height","width","cx","cy","r","fill","d","stroke","strokeWidth","placeholder","type","required","onChange","onFocus","onClick","preventDefault","formIsValid","errorMessage","console","log","length","match","trim","lastAtPos","lastIndexOf","lastDotPos","indexOf","handleValidation","window","open","Navbar","isActive","navLinks","map","link","to","toLowerCase","smooth","Skills","data","skill","index","min","max","Work","work","Follow","href","Observer","sections","document","querySelectorAll","observer","IntersectionObserver","entries","forEach","entry","section","observe","App","addEventListener","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.55e7e9b0.chunk.js","sourcesContent":["const projects = [{\n    title: \"Performance management system App\",\n    details: \"worked on the backend, creating several\\\n     Rest APIs for Authentication, Goals Management,\\\n      and Employee Tracking using Django Rest Framework.\"\n},\n{\n    title: \"Online Blogging Appss\",\n    details: \"Created numerous REST APIs that enable users\\\n     to create and modify blogs with various tags, as\\\n      well as read, like, and comment on other people's\\\n       blogs and subscribe to their favorite bloggers.\"\n},\n{\n    title: \"Online Blogging Appss\",\n    details: \"Created numerous REST APIs that enable users\\\n     to create and modify blogs with various tags, as\\\n      well as read, like, and comment on other people's\\\n       blogs and subscribe to their favorite bloggers.\"\n},\n{\n    title: \"Online Blogging Appss\",\n    details: \"Created numerous REST APIs that enable users\\\n     to create and modify blogs with various tags, as\\\n      well as read, like, and comment on other people's\\\n       blogs and subscribe to their favorite bloggers.\"\n}];\n\nconst skills = [{\n    title: 'HTML, CSS, JQuery, Bootstrap',\n    level: 95\n},{\n    title: 'Angular and React JS',\n    level: 78\n},{\n    title: 'Javscript, Node.js',\n    level: 85\n},{\n    title: 'MySQL, MongoDB, Firebase, PostgreSQL',\n    level: 85\n},{\n    title: 'Linux, Shell Script',\n    level: 70\n},{\n    title: 'GCP, AWS',\n    level: 70\n}]\n\nmodule.exports = { projects, skills };","const About = () => {\n    return ( \n        <div className=\"about\">\n            <div id=\"header\" className=\"section\">\n                <img alt=\"\" className=\"img-circle\" src=\"https://image.freepik.com/free-vector/man-profile-cartoon_18591-58482.jpg\"/>\n                <p>Siddhesh Kubal</p>\n            </div>\n            <div className=\"section scrollTopBuffer\" id=\"about\">\n                <h1><span>About Me</span></h1>\n                <p>\n                    Hey! I'm <strong>Siddhesh</strong>.I’ve always been a great problem solver, an independent extrovert, and a technophile obsessed with the latest devices. Today, I’m working from home as a software engineer for Quantiphi, Inc., and I get to show off all these elements of who I am.\n\n                    I started learning to code when I was a teenager, though it was always more of a hobby than a career focus. After a college education, and continuing to pursue that hobby, I realized software engineering was the right field for me.\n                </p>\n                <p className=\"quote\">\"Declare variables, not war\"</p>\n            </div>\n        </div>\n     );\n}\n \nexport default About;","import { useState } from \"react\";\n\nconst Contact = () => {\n    const [state, setstate] = useState({\n        fields: {\n            name: '',\n            email: '',\n            message: ''\n        },\n        errors: {\n            name: '',\n            email: '',\n            message: ''\n        }\n    })\n\n\n    const handleValidation = () => {\n        const fields = state.fields;\n        const errors = state.errors;\n        let formIsValid = true;\n        const errorMessage = {\n            notEmpty: \" shoudn't be empty\",\n            onlyLetters: \"Only letters please\",\n            inValidEmail:  \"Valid email please\"\n        };\n\n\n        console.log('NAMEEEEEEEEEEEEEEEE IS ');\n        console.log(fields[\"name\"]);\n        //Name\n        if(!fields[\"name\"]){\n           formIsValid = false;\n           errors[\"name\"] = `Name ${errorMessage.notEmpty}`;\n        }\n  \n        if(fields[\"name\"].length > 0){\n           if(!fields[\"name\"].match(/^[a-zA-Z\\s]*$/)){\n              formIsValid = false;\n              errors[\"name\"] = errorMessage.onlyLetters;\n           }        \n        }\n   \n        //Email\n        if(!fields[\"email\"].trim()){\n           formIsValid = false;\n           errors[\"email\"] = `Email ${errorMessage.notEmpty}`;\n        }\n  \n        if(fields[\"email\"].length > 0){\n           let lastAtPos = fields[\"email\"].lastIndexOf('@');\n           let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n           if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') === -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n              formIsValid = false;\n              errors[\"email\"] = `Email ${errorMessage.inValidEmail}`;\n            }\n       }  \n\n       setstate({fields: fields, errors: errors});\n       return formIsValid;\n    }\n\n    const getValue = (event) => {\n        const fields = state.fields;\n        const attribute = event.target.name;\n        fields[attribute] = event.target.value;\n        setstate({fields: fields, errors: state.errors});\n    }\n\n    const handleFocus = (event) => {\n        const errors = state.errors;\n        const attribute = event.target.name;\n        errors[attribute] = '';\n        setstate({fields: state.fields, errors: errors});\n    }\n\n   const sendQuery = (event) => {\n        event.preventDefault();\n\n        if(handleValidation()){\n            console.log('form validated');\n            const fields = state.fields;\n            const subject = 'Ciao Siddhesh!'\n            window.open(`mailto:siddh14.kubal@gmail.com?subject=${subject}&body=${fields.message}`);\n        } else {\n            console.log('form not valid');\n        }\n        //console.log(JSON.stringify(state));\n    }\n\n    return ( \n        <div className=\"contact scrollTopBuffer\" id=\"contact\">\n            <div className=\"section\">\n                <h1><span>Contact Me</span></h1>\n                \n                <svg className=\"face\" height=\"100\" width=\"100\">\n                    <circle cx=\"50\" cy=\"50\" r=\"50\" fill=\"#FDD835\"/>\n                    <circle cx=\"30\" cy=\"30\" r=\"10\" fill=\"#FFFFFF\"/>\n                    <circle cx=\"70\" cy=\"30\" r=\"10\" fill=\"#FFFFFF\"/>\n                    <circle cx=\"30\" cy=\"30\" r=\"5\" fill=\"#000000\"/>\n                    <circle cx=\"70\" cy=\"30\" r=\"5\" fill=\"#000000\"/>\n                    <path d=\"M 30 70 q 20 20 40 0\" stroke=\"#FFFFFF\" strokeWidth=\"5\" fill=\"none\" />\n                </svg>\n                    \n                <form>\n                    <div className=\"pos-rel\">\n                        <input name=\"name\" placeholder=\"Name\" type=\"text\" required \n                         onChange={getValue} onFocus={handleFocus}/>\n                        <div className=\"error-msg\">{state.errors[\"name\"]}</div>\n                    </div>\n                    <div className=\"pos-rel\">\n                        <input name=\"email\" placeholder=\"Email\" type=\"email\" required onChange={getValue} onFocus={handleFocus}/>\n                        <div className=\"error-msg\">{state.errors[\"email\"]}</div>\n                    </div>\n                    <div className=\"pos-rel\">\n                        <textarea name=\"message\" placeholder=\"Message\" required onChange={getValue} onFocus={handleFocus}></textarea>\n                    </div>\n                    <button className=\"submit\" onClick={ sendQuery }>Send</button>\n                </form>\n            </div>\n        </div>\n    );\n}\n \nexport default Contact;","import { useState} from \"react\";\nimport { HashLink } from 'react-router-hash-link';\n\nconst Navbar = () => {\n    const [navLinks, setNavLinks] = useState([\n        {name: 'Home', isActive: true, id:1}, \n        {name: 'About', isActive: false, id:2}, \n        {name: 'Skills', isActive: false, id:3}, \n        {name: 'Projects', isActive: false, id:4}, \n        {name: 'Contact', isActive: false, id:5},\n        {name: 'Follow', isActive: false, id:6}\n    ]);\n\n    return ( \n        <nav className=\"navbar\">\n            {navLinks.map((link) => {\n                    return <HashLink \n                        to={`#${link.name.toLowerCase()}`} \n                        smooth \n                        key={link.id}\n                        className={`navLinks ${link.isActive ? 'active' : ''}`}>\n                            {link.name}\n                    </HashLink>\n                })\n            }\n        </nav>\n     );\n}\n \nexport default Navbar;","const Skills = ({data}) => {\n    return ( \n        <div className=\"skills scrollTopBuffer\" id=\"skills\">\n            <div className=\"section\">\n                <h1><span>My Skills</span></h1>\n                <ul>\n                    {\n                        data.map((skill, index) => (\n                            <li key={index}>{skill.title} <br />\n                                <progress min=\"0\" max=\"100\" value={skill.level}></progress>\n                            </li>\n                        ))\n                    }\n                </ul>\n            </div>\n        </div>\n     );\n}\n \nexport default Skills;","const Work = ({data}) => {\n    return ( \n        <div className=\"work section scrollTopBuffer\" id=\"projects\">\n            <div className=''>\n                <h1><span>My work</span></h1>\n            </div>\n            <div className=\"flex-container\">\n            {\n                data.map((work, index) => (\n                    <div className=\"container\" key={index}>\n                        <h4><b>{work.title}</b></h4>\n                        <p>{work.details}</p>\n                    </div>\n                ))\n            }\n           </div>\n        </div>\n     );\n}\n \nexport default Work;","const Follow = () => {\n    return ( \n        <div className=\"follow\" id=\"follow\">\n            <div className=\"section\" id=\"contacts\">\n                <h1><span>Follow Me</span></h1>\n                <div>\n                    <a href=\"#\">\n                        <img alt=\"Insta\" src=\"https://workingwithdog.com/wp-content/uploads/2016/05/new_instagram_logo-1024x1024.jpg\" />\n                    </a>\n                    <a href=\"#\">\n                        <img alt=\"Facebook\" src=\"https://www.sololearn.com/Uploads/icons/facebook.png\"/>\n                    </a>\n                    <a href=\"#\">\n                        <img alt=\"Twitter\" src=\"https://www.sololearn.com/Uploads/icons/twitter.png\" />\n                    </a>\n                </div>\n            </div>\n        </div>\n     );\n}\n \nexport default Follow;","const Observer = () => {\n    let options = {\n    };\n    \n    let sections = document.querySelectorAll('.section');\n    \n    let callback = (entries, observer) => {\n        entries.forEach(entry => {\n            console.log(entries);\n          // Each entry describes an intersection change for one observed\n          // target element:\n          //   entry.boundingClientRect\n          //   entry.intersectionRatio\n          //   entry.intersectionRect\n          //   entry.isIntersecting\n          //   entry.rootBounds\n          //   entry.target\n          //   entry.time\n        });\n      };\n      let observer = new IntersectionObserver(callback, options);\n      sections.forEach(section => {\n        observer.observe(section);\n      })\n}\n \nexport default Observer;\n\n","import './App.css';\nimport './portfolio.css';\nimport About from './About';\nimport Contact from './Contact';\nimport Navbar from './Navbar';\nimport Skills from './Skills';\nimport Work from './Work';\nimport Follow from './Follow';\nimport { useEffect } from 'react';\nimport { projects, skills } from './data';\nimport Observer from './intersection-observer';\n\nfunction App() {\n\n  const elementInViewport = (el) => {\n    var top = el.offsetTop;\n    var left = el.offsetLeft;\n    var width = el.offsetWidth;\n    var height = el.offsetHeight;\n  \n    while(el.offsetParent) {\n      el = el.offsetParent;\n      top += el.offsetTop;\n      left += el.offsetLeft;\n    }\n  \n    return (\n      top < (window.pageYOffset + window.innerHeight) &&\n      left < (window.pageXOffset + window.innerWidth) &&\n      (top + height) > window.pageYOffset &&\n      (left + width) > window.pageXOffset\n    );\n  }\n\n  // useEffect(() => {\n  //   document.addEventListener('scroll', function(e) {\n  //     Observer()\n  //   })\n  // });\n\n  window.addEventListener(\"load\", (event) => {\n    Observer();\n  }, false);\n  \n\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"padding10\">\n        <About />\n        <Skills data={skills}/>\n        <Work data={projects}/>\n        <Contact />\n        <Follow />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter as Router} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}